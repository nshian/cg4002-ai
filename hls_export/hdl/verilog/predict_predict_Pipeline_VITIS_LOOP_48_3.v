// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module predict_predict_Pipeline_VITIS_LOOP_48_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        j_1,
        hidden_layer1_address0,
        hidden_layer1_ce0,
        hidden_layer1_q0,
        hidden_layer1_address1,
        hidden_layer1_ce1,
        hidden_layer1_q1,
        hidden_layer1_1_address0,
        hidden_layer1_1_ce0,
        hidden_layer1_1_q0,
        hidden_layer1_1_address1,
        hidden_layer1_1_ce1,
        hidden_layer1_1_q1,
        hidden_layer1_2_address0,
        hidden_layer1_2_ce0,
        hidden_layer1_2_q0,
        hidden_layer1_2_address1,
        hidden_layer1_2_ce1,
        hidden_layer1_2_q1,
        hidden_layer1_3_address0,
        hidden_layer1_3_ce0,
        hidden_layer1_3_q0,
        hidden_layer1_3_address1,
        hidden_layer1_3_ce1,
        hidden_layer1_3_q1,
        zext_ln51,
        p_out,
        p_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] j_1;
output  [2:0] hidden_layer1_address0;
output   hidden_layer1_ce0;
input  [30:0] hidden_layer1_q0;
output  [2:0] hidden_layer1_address1;
output   hidden_layer1_ce1;
input  [30:0] hidden_layer1_q1;
output  [2:0] hidden_layer1_1_address0;
output   hidden_layer1_1_ce0;
input  [30:0] hidden_layer1_1_q0;
output  [2:0] hidden_layer1_1_address1;
output   hidden_layer1_1_ce1;
input  [30:0] hidden_layer1_1_q1;
output  [2:0] hidden_layer1_2_address0;
output   hidden_layer1_2_ce0;
input  [30:0] hidden_layer1_2_q0;
output  [2:0] hidden_layer1_2_address1;
output   hidden_layer1_2_ce1;
input  [30:0] hidden_layer1_2_q1;
output  [2:0] hidden_layer1_3_address0;
output   hidden_layer1_3_ce0;
input  [30:0] hidden_layer1_3_q0;
output  [2:0] hidden_layer1_3_address1;
output   hidden_layer1_3_ce1;
input  [30:0] hidden_layer1_3_q1;
input  [7:0] zext_ln51;
output  [31:0] p_out;
output   p_out_ap_vld;

reg ap_idle;
reg hidden_layer1_ce0;
reg hidden_layer1_ce1;
reg hidden_layer1_1_ce0;
reg hidden_layer1_1_ce1;
reg hidden_layer1_2_ce0;
reg hidden_layer1_2_ce1;
reg hidden_layer1_3_ce0;
reg hidden_layer1_3_ce1;
reg p_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_356_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [7:0] p_ZL10l2_weights_0_address0;
reg    p_ZL10l2_weights_0_ce0;
wire  signed [16:0] p_ZL10l2_weights_0_q0;
wire   [7:0] p_ZL10l2_weights_0_address1;
reg    p_ZL10l2_weights_0_ce1;
wire  signed [16:0] p_ZL10l2_weights_0_q1;
wire   [7:0] p_ZL10l2_weights_1_address0;
reg    p_ZL10l2_weights_1_ce0;
wire   [16:0] p_ZL10l2_weights_1_q0;
wire   [7:0] p_ZL10l2_weights_1_address1;
reg    p_ZL10l2_weights_1_ce1;
wire  signed [16:0] p_ZL10l2_weights_1_q1;
wire   [7:0] p_ZL10l2_weights_2_address0;
reg    p_ZL10l2_weights_2_ce0;
wire  signed [15:0] p_ZL10l2_weights_2_q0;
wire   [7:0] p_ZL10l2_weights_2_address1;
reg    p_ZL10l2_weights_2_ce1;
wire  signed [15:0] p_ZL10l2_weights_2_q1;
wire   [7:0] p_ZL10l2_weights_3_address0;
reg    p_ZL10l2_weights_3_ce0;
wire  signed [16:0] p_ZL10l2_weights_3_q0;
wire   [7:0] p_ZL10l2_weights_3_address1;
reg    p_ZL10l2_weights_3_ce1;
wire  signed [16:0] p_ZL10l2_weights_3_q1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_825;
wire   [2:0] lshr_ln5_fu_368_p4;
reg   [2:0] lshr_ln5_reg_829;
wire   [46:0] mul_ln51_2_fu_311_p2;
reg   [46:0] mul_ln51_2_reg_894;
reg   [31:0] tmp_7_reg_899;
wire   [47:0] mul_ln51_3_fu_327_p2;
reg   [47:0] mul_ln51_3_reg_904;
wire   [47:0] mul_ln51_4_fu_331_p2;
reg   [47:0] mul_ln51_4_reg_909;
reg  signed [16:0] p_ZL10l2_weights_1_load_1_reg_914;
reg   [30:0] hidden_layer1_1_load_1_reg_919;
wire   [63:0] zext_ln51_1_fu_394_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln48_fu_378_p1;
wire   [63:0] zext_ln51_16_fu_443_p1;
wire   [63:0] zext_ln51_7_fu_428_p1;
wire   [63:0] zext_ln51_18_fu_479_p1;
wire   [63:0] zext_ln51_9_fu_464_p1;
wire   [63:0] zext_ln51_12_fu_614_p1;
wire   [63:0] zext_ln51_11_fu_601_p1;
reg   [31:0] empty_fu_84;
reg   [31:0] ap_sig_allocacmp_p_load12;
wire    ap_loop_init;
reg   [5:0] i_fu_88;
wire   [5:0] add_ln48_2_fu_484_p2;
reg   [5:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0_01001;
wire   [30:0] mul_ln51_2_fu_311_p0;
wire   [30:0] mul_ln51_6_fu_315_p0;
wire   [30:0] mul_ln51_fu_319_p0;
wire   [30:0] mul_ln51_1_fu_323_p0;
wire   [30:0] mul_ln51_3_fu_327_p0;
wire   [30:0] mul_ln51_4_fu_331_p0;
wire   [30:0] mul_ln51_5_fu_335_p0;
wire   [30:0] mul_ln51_7_fu_339_p0;
wire   [7:0] tmp_s_fu_386_p3;
wire   [4:0] trunc_ln48_fu_364_p1;
wire   [4:0] or_ln48_fu_402_p2;
wire   [5:0] zext_ln51_4_fu_408_p1;
wire   [5:0] add_ln48_fu_412_p2;
wire   [3:0] lshr_ln51_4_fu_418_p4;
wire   [7:0] zext_ln51_15_fu_433_p1;
wire   [7:0] add_ln51_8_fu_437_p2;
wire   [5:0] add_ln48_1_fu_448_p2;
wire   [3:0] lshr_ln51_6_fu_454_p4;
wire   [7:0] zext_ln51_17_fu_469_p1;
wire   [7:0] add_ln51_9_fu_473_p2;
wire   [47:0] shl_ln3_fu_508_p3;
wire   [47:0] mul_ln51_fu_319_p2;
wire   [47:0] add_ln51_fu_516_p2;
wire   [31:0] tmp_6_fu_532_p4;
wire   [47:0] shl_ln51_1_fu_542_p3;
wire   [47:0] mul_ln51_1_fu_323_p2;
wire   [47:0] add_ln51_1_fu_550_p2;
wire   [2:0] or_ln51_fu_596_p2;
wire   [7:0] tmp_11_fu_607_p3;
wire   [47:0] shl_ln51_2_fu_620_p3;
wire  signed [47:0] sext_ln51_3_fu_627_p1;
wire   [47:0] add_ln51_2_fu_630_p2;
wire   [31:0] tmp_8_fu_636_p4;
wire   [47:0] shl_ln51_3_fu_646_p3;
wire   [47:0] add_ln51_3_fu_654_p2;
wire   [31:0] tmp_9_fu_659_p4;
wire   [47:0] shl_ln51_4_fu_669_p3;
wire   [47:0] add_ln51_4_fu_677_p2;
wire   [31:0] tmp_10_fu_690_p4;
wire   [47:0] shl_ln51_5_fu_700_p3;
wire   [47:0] mul_ln51_5_fu_335_p2;
wire   [47:0] add_ln51_5_fu_708_p2;
wire   [31:0] tmp_12_fu_724_p4;
wire   [46:0] mul_ln51_6_fu_315_p2;
wire   [47:0] shl_ln51_6_fu_734_p3;
wire  signed [47:0] sext_ln51_8_fu_742_p1;
wire   [47:0] add_ln51_6_fu_746_p2;
wire   [31:0] tmp_13_fu_762_p4;
wire   [47:0] shl_ln51_7_fu_772_p3;
wire   [47:0] mul_ln51_7_fu_339_p2;
wire   [47:0] add_ln51_7_fu_780_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [47:0] mul_ln51_1_fu_323_p00;
wire   [46:0] mul_ln51_2_fu_311_p00;
wire   [47:0] mul_ln51_3_fu_327_p00;
wire   [47:0] mul_ln51_4_fu_331_p00;
wire   [47:0] mul_ln51_5_fu_335_p00;
wire   [46:0] mul_ln51_6_fu_315_p00;
wire   [47:0] mul_ln51_7_fu_339_p00;
wire   [47:0] mul_ln51_fu_319_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 empty_fu_84 = 32'd0;
#0 i_fu_88 = 6'd0;
#0 ap_done_reg = 1'b0;
end

predict_predict_Pipeline_VITIS_LOOP_48_3_p_ZL10l2_weights_0_ROM_AUTO_1R #(
    .DataWidth( 17 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
p_ZL10l2_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL10l2_weights_0_address0),
    .ce0(p_ZL10l2_weights_0_ce0),
    .q0(p_ZL10l2_weights_0_q0),
    .address1(p_ZL10l2_weights_0_address1),
    .ce1(p_ZL10l2_weights_0_ce1),
    .q1(p_ZL10l2_weights_0_q1)
);

predict_predict_Pipeline_VITIS_LOOP_48_3_p_ZL10l2_weights_1_ROM_AUTO_1R #(
    .DataWidth( 17 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
p_ZL10l2_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL10l2_weights_1_address0),
    .ce0(p_ZL10l2_weights_1_ce0),
    .q0(p_ZL10l2_weights_1_q0),
    .address1(p_ZL10l2_weights_1_address1),
    .ce1(p_ZL10l2_weights_1_ce1),
    .q1(p_ZL10l2_weights_1_q1)
);

predict_predict_Pipeline_VITIS_LOOP_48_3_p_ZL10l2_weights_2_ROM_AUTO_1R #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
p_ZL10l2_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL10l2_weights_2_address0),
    .ce0(p_ZL10l2_weights_2_ce0),
    .q0(p_ZL10l2_weights_2_q0),
    .address1(p_ZL10l2_weights_2_address1),
    .ce1(p_ZL10l2_weights_2_ce1),
    .q1(p_ZL10l2_weights_2_q1)
);

predict_predict_Pipeline_VITIS_LOOP_48_3_p_ZL10l2_weights_3_ROM_AUTO_1R #(
    .DataWidth( 17 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
p_ZL10l2_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_ZL10l2_weights_3_address0),
    .ce0(p_ZL10l2_weights_3_ce0),
    .q0(p_ZL10l2_weights_3_q0),
    .address1(p_ZL10l2_weights_3_address1),
    .ce1(p_ZL10l2_weights_3_ce1),
    .q1(p_ZL10l2_weights_3_q1)
);

predict_mul_31ns_16s_47_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 47 ))
mul_31ns_16s_47_1_1_U32(
    .din0(mul_ln51_2_fu_311_p0),
    .din1(p_ZL10l2_weights_2_q1),
    .dout(mul_ln51_2_fu_311_p2)
);

predict_mul_31ns_16s_47_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 47 ))
mul_31ns_16s_47_1_1_U33(
    .din0(mul_ln51_6_fu_315_p0),
    .din1(p_ZL10l2_weights_2_q0),
    .dout(mul_ln51_6_fu_315_p2)
);

predict_mul_31ns_17s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mul_31ns_17s_48_1_1_U34(
    .din0(mul_ln51_fu_319_p0),
    .din1(p_ZL10l2_weights_0_q1),
    .dout(mul_ln51_fu_319_p2)
);

predict_mul_31ns_17s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mul_31ns_17s_48_1_1_U35(
    .din0(mul_ln51_1_fu_323_p0),
    .din1(p_ZL10l2_weights_1_q1),
    .dout(mul_ln51_1_fu_323_p2)
);

predict_mul_31ns_17s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mul_31ns_17s_48_1_1_U36(
    .din0(mul_ln51_3_fu_327_p0),
    .din1(p_ZL10l2_weights_3_q1),
    .dout(mul_ln51_3_fu_327_p2)
);

predict_mul_31ns_17s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mul_31ns_17s_48_1_1_U37(
    .din0(mul_ln51_4_fu_331_p0),
    .din1(p_ZL10l2_weights_0_q0),
    .dout(mul_ln51_4_fu_331_p2)
);

predict_mul_31ns_17s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mul_31ns_17s_48_1_1_U38(
    .din0(mul_ln51_5_fu_335_p0),
    .din1(p_ZL10l2_weights_1_load_1_reg_914),
    .dout(mul_ln51_5_fu_335_p2)
);

predict_mul_31ns_17s_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 48 ))
mul_31ns_17s_48_1_1_U39(
    .din0(mul_ln51_7_fu_339_p0),
    .din1(p_ZL10l2_weights_3_q0),
    .dout(mul_ln51_7_fu_339_p2)
);

predict_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_fu_84 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            empty_fu_84 <= {{add_ln51_7_fu_780_p2[47:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_356_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_88 <= add_ln48_2_fu_484_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_88 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        lshr_ln5_reg_829 <= {{ap_sig_allocacmp_i_1[4:2]}};
        mul_ln51_2_reg_894 <= mul_ln51_2_fu_311_p2;
        mul_ln51_3_reg_904 <= mul_ln51_3_fu_327_p2;
        mul_ln51_4_reg_909 <= mul_ln51_4_fu_331_p2;
        tmp_7_reg_899 <= {{add_ln51_1_fu_550_p2[47:16]}};
        tmp_reg_825 <= ap_sig_allocacmp_i_1[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_1_load_1_reg_919 <= hidden_layer1_1_q0;
        p_ZL10l2_weights_1_load_1_reg_914 <= p_ZL10l2_weights_1_q0;
    end
end

always @ (*) begin
    if (((tmp_fu_356_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_p_load12 = {{add_ln51_7_fu_780_p2[47:16]}};
    end else begin
        ap_sig_allocacmp_p_load12 = empty_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_1_ce0 = 1'b1;
    end else begin
        hidden_layer1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_1_ce1 = 1'b1;
    end else begin
        hidden_layer1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_2_ce0 = 1'b1;
    end else begin
        hidden_layer1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_2_ce1 = 1'b1;
    end else begin
        hidden_layer1_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_3_ce0 = 1'b1;
    end else begin
        hidden_layer1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_3_ce1 = 1'b1;
    end else begin
        hidden_layer1_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_ce0 = 1'b1;
    end else begin
        hidden_layer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hidden_layer1_ce1 = 1'b1;
    end else begin
        hidden_layer1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_0_ce0 = 1'b1;
    end else begin
        p_ZL10l2_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_0_ce1 = 1'b1;
    end else begin
        p_ZL10l2_weights_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_1_ce0 = 1'b1;
    end else begin
        p_ZL10l2_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_1_ce1 = 1'b1;
    end else begin
        p_ZL10l2_weights_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_2_ce0 = 1'b1;
    end else begin
        p_ZL10l2_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_2_ce1 = 1'b1;
    end else begin
        p_ZL10l2_weights_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_3_ce0 = 1'b1;
    end else begin
        p_ZL10l2_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL10l2_weights_3_ce1 = 1'b1;
    end else begin
        p_ZL10l2_weights_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_reg_825 == 1'd1))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln48_1_fu_448_p2 = (zext_ln51_4_fu_408_p1 + 6'd3);

assign add_ln48_2_fu_484_p2 = (ap_sig_allocacmp_i_1 + 6'd8);

assign add_ln48_fu_412_p2 = (zext_ln51_4_fu_408_p1 + 6'd2);

assign add_ln51_1_fu_550_p2 = (shl_ln51_1_fu_542_p3 + mul_ln51_1_fu_323_p2);

assign add_ln51_2_fu_630_p2 = ($signed(shl_ln51_2_fu_620_p3) + $signed(sext_ln51_3_fu_627_p1));

assign add_ln51_3_fu_654_p2 = (shl_ln51_3_fu_646_p3 + mul_ln51_3_reg_904);

assign add_ln51_4_fu_677_p2 = (shl_ln51_4_fu_669_p3 + mul_ln51_4_reg_909);

assign add_ln51_5_fu_708_p2 = (shl_ln51_5_fu_700_p3 + mul_ln51_5_fu_335_p2);

assign add_ln51_6_fu_746_p2 = ($signed(shl_ln51_6_fu_734_p3) + $signed(sext_ln51_8_fu_742_p1));

assign add_ln51_7_fu_780_p2 = (shl_ln51_7_fu_772_p3 + mul_ln51_7_fu_339_p2);

assign add_ln51_8_fu_437_p2 = (zext_ln51 + zext_ln51_15_fu_433_p1);

assign add_ln51_9_fu_473_p2 = (zext_ln51 + zext_ln51_17_fu_469_p1);

assign add_ln51_fu_516_p2 = (shl_ln3_fu_508_p3 + mul_ln51_fu_319_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign hidden_layer1_1_address0 = zext_ln51_9_fu_464_p1;

assign hidden_layer1_1_address1 = zext_ln48_fu_378_p1;

assign hidden_layer1_2_address0 = zext_ln51_11_fu_601_p1;

assign hidden_layer1_2_address1 = zext_ln48_fu_378_p1;

assign hidden_layer1_3_address0 = zext_ln51_11_fu_601_p1;

assign hidden_layer1_3_address1 = zext_ln48_fu_378_p1;

assign hidden_layer1_address0 = zext_ln51_7_fu_428_p1;

assign hidden_layer1_address1 = zext_ln48_fu_378_p1;

assign lshr_ln51_4_fu_418_p4 = {{add_ln48_fu_412_p2[5:2]}};

assign lshr_ln51_6_fu_454_p4 = {{add_ln48_1_fu_448_p2[5:2]}};

assign lshr_ln5_fu_368_p4 = {{ap_sig_allocacmp_i_1[4:2]}};

assign mul_ln51_1_fu_323_p0 = mul_ln51_1_fu_323_p00;

assign mul_ln51_1_fu_323_p00 = hidden_layer1_1_q1;

assign mul_ln51_2_fu_311_p0 = mul_ln51_2_fu_311_p00;

assign mul_ln51_2_fu_311_p00 = hidden_layer1_2_q1;

assign mul_ln51_3_fu_327_p0 = mul_ln51_3_fu_327_p00;

assign mul_ln51_3_fu_327_p00 = hidden_layer1_3_q1;

assign mul_ln51_4_fu_331_p0 = mul_ln51_4_fu_331_p00;

assign mul_ln51_4_fu_331_p00 = hidden_layer1_q0;

assign mul_ln51_5_fu_335_p0 = mul_ln51_5_fu_335_p00;

assign mul_ln51_5_fu_335_p00 = hidden_layer1_1_load_1_reg_919;

assign mul_ln51_6_fu_315_p0 = mul_ln51_6_fu_315_p00;

assign mul_ln51_6_fu_315_p00 = hidden_layer1_2_q0;

assign mul_ln51_7_fu_339_p0 = mul_ln51_7_fu_339_p00;

assign mul_ln51_7_fu_339_p00 = hidden_layer1_3_q0;

assign mul_ln51_fu_319_p0 = mul_ln51_fu_319_p00;

assign mul_ln51_fu_319_p00 = hidden_layer1_q1;

assign or_ln48_fu_402_p2 = (trunc_ln48_fu_364_p1 | 5'd2);

assign or_ln51_fu_596_p2 = (lshr_ln5_reg_829 | 3'd1);

assign p_ZL10l2_weights_0_address0 = zext_ln51_16_fu_443_p1;

assign p_ZL10l2_weights_0_address1 = zext_ln51_1_fu_394_p1;

assign p_ZL10l2_weights_1_address0 = zext_ln51_18_fu_479_p1;

assign p_ZL10l2_weights_1_address1 = zext_ln51_1_fu_394_p1;

assign p_ZL10l2_weights_2_address0 = zext_ln51_12_fu_614_p1;

assign p_ZL10l2_weights_2_address1 = zext_ln51_1_fu_394_p1;

assign p_ZL10l2_weights_3_address0 = zext_ln51_12_fu_614_p1;

assign p_ZL10l2_weights_3_address1 = zext_ln51_1_fu_394_p1;

assign p_out = empty_fu_84;

assign sext_ln51_3_fu_627_p1 = $signed(mul_ln51_2_reg_894);

assign sext_ln51_8_fu_742_p1 = $signed(mul_ln51_6_fu_315_p2);

assign shl_ln3_fu_508_p3 = {{ap_sig_allocacmp_p_load12}, {16'd0}};

assign shl_ln51_1_fu_542_p3 = {{tmp_6_fu_532_p4}, {16'd0}};

assign shl_ln51_2_fu_620_p3 = {{tmp_7_reg_899}, {16'd0}};

assign shl_ln51_3_fu_646_p3 = {{tmp_8_fu_636_p4}, {16'd0}};

assign shl_ln51_4_fu_669_p3 = {{tmp_9_fu_659_p4}, {16'd0}};

assign shl_ln51_5_fu_700_p3 = {{tmp_10_fu_690_p4}, {16'd0}};

assign shl_ln51_6_fu_734_p3 = {{tmp_12_fu_724_p4}, {16'd0}};

assign shl_ln51_7_fu_772_p3 = {{tmp_13_fu_762_p4}, {16'd0}};

assign tmp_10_fu_690_p4 = {{add_ln51_4_fu_677_p2[47:16]}};

assign tmp_11_fu_607_p3 = {{j_1}, {or_ln51_fu_596_p2}};

assign tmp_12_fu_724_p4 = {{add_ln51_5_fu_708_p2[47:16]}};

assign tmp_13_fu_762_p4 = {{add_ln51_6_fu_746_p2[47:16]}};

assign tmp_6_fu_532_p4 = {{add_ln51_fu_516_p2[47:16]}};

assign tmp_8_fu_636_p4 = {{add_ln51_2_fu_630_p2[47:16]}};

assign tmp_9_fu_659_p4 = {{add_ln51_3_fu_654_p2[47:16]}};

assign tmp_fu_356_p3 = ap_sig_allocacmp_i_1[32'd5];

assign tmp_s_fu_386_p3 = {{j_1}, {lshr_ln5_fu_368_p4}};

assign trunc_ln48_fu_364_p1 = ap_sig_allocacmp_i_1[4:0];

assign zext_ln48_fu_378_p1 = lshr_ln5_fu_368_p4;

assign zext_ln51_11_fu_601_p1 = or_ln51_fu_596_p2;

assign zext_ln51_12_fu_614_p1 = tmp_11_fu_607_p3;

assign zext_ln51_15_fu_433_p1 = lshr_ln51_4_fu_418_p4;

assign zext_ln51_16_fu_443_p1 = add_ln51_8_fu_437_p2;

assign zext_ln51_17_fu_469_p1 = lshr_ln51_6_fu_454_p4;

assign zext_ln51_18_fu_479_p1 = add_ln51_9_fu_473_p2;

assign zext_ln51_1_fu_394_p1 = tmp_s_fu_386_p3;

assign zext_ln51_4_fu_408_p1 = or_ln48_fu_402_p2;

assign zext_ln51_7_fu_428_p1 = lshr_ln51_4_fu_418_p4;

assign zext_ln51_9_fu_464_p1 = lshr_ln51_6_fu_454_p4;

endmodule //predict_predict_Pipeline_VITIS_LOOP_48_3
